// <auto-generated />
using System;
using BuyRealEstate.DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuyRealEstate.DAL.Migrations
{
    [DbContext(typeof(BuyRealEstateDbContext))]
    [Migration("20241201131722_BuyRealEstateMirgrtion2")]
    partial class BuyRealEstateMirgrtion2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BuyRealEstate.DAL.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Permission")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.DevelopmentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DevelopmentStatuses");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.Document", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<byte[]>("DocumentData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.LegalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LegalStatuses");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.Payment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Component")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PaymentConfirmation")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("PaymentExecutionMethodID")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatusId")
                        .HasColumnType("int");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PaymentExecutionMethodID");

                    b.HasIndex("PaymentStatusId");

                    b.HasIndex("PersonID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.PaymentExecutionMethod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("PaymentExecutionMethodID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PaymentExecutions");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.PaymentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentStatus");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.Plot", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("MonthlyFundingCost")
                        .HasColumnType("float");

                    b.Property<int>("MonthsForFundingCost")
                        .HasColumnType("int");

                    b.Property<int>("PlotCost")
                        .HasColumnType("int");

                    b.Property<int>("PlotNumber")
                        .HasColumnType("int");

                    b.Property<double>("PlotSize")
                        .HasColumnType("float");

                    b.Property<double>("PlotValue")
                        .HasColumnType("float");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Plots");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.Professional", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebsiteAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Professionals");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("DevelopmentStatusId")
                        .HasColumnType("int");

                    b.Property<double>("GrossProfit")
                        .HasColumnType("float");

                    b.Property<int>("LegalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("LinkToLead2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectManager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProjectType")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("DevelopmentStatusId");

                    b.HasIndex("LegalStatusId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.RelationshipCustomersPlots", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("PlotID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("CustomerPlots");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.RelationshipPaymentsPlots", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("PaymentID")
                        .HasColumnType("int");

                    b.Property<int>("PlotID")
                        .HasColumnType("int");

                    b.Property<int>("paymentStutusId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("paymentStutusId");

                    b.ToTable("PlotPayments");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.RelationshipPaymentsProjects", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("PaymentID")
                        .HasColumnType("int");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int>("paymentStutusId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("paymentStutusId");

                    b.ToTable("PaymentProjects");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.Payment", b =>
                {
                    b.HasOne("BuyRealEstate.DAL.Models.PaymentExecutionMethod", "PaymentExecutionMethod")
                        .WithMany()
                        .HasForeignKey("PaymentExecutionMethodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuyRealEstate.DAL.Models.PaymentStatus", "PaymentStatus")
                        .WithMany()
                        .HasForeignKey("PaymentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuyRealEstate.DAL.Models.Professional", "Person")
                        .WithMany()
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentExecutionMethod");

                    b.Navigation("PaymentStatus");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.Plot", b =>
                {
                    b.HasOne("BuyRealEstate.DAL.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.Project", b =>
                {
                    b.HasOne("BuyRealEstate.DAL.Models.DevelopmentStatus", "DevelopmentStatus")
                        .WithMany()
                        .HasForeignKey("DevelopmentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuyRealEstate.DAL.Models.LegalStatus", "LegalStatus")
                        .WithMany()
                        .HasForeignKey("LegalStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DevelopmentStatus");

                    b.Navigation("LegalStatus");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.RelationshipPaymentsPlots", b =>
                {
                    b.HasOne("BuyRealEstate.DAL.Models.PaymentStatus", "paymentStutus")
                        .WithMany()
                        .HasForeignKey("paymentStutusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("paymentStutus");
                });

            modelBuilder.Entity("BuyRealEstate.DAL.Models.RelationshipPaymentsProjects", b =>
                {
                    b.HasOne("BuyRealEstate.DAL.Models.PaymentStatus", "paymentStutus")
                        .WithMany()
                        .HasForeignKey("paymentStutusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("paymentStutus");
                });
#pragma warning restore 612, 618
        }
    }
}
